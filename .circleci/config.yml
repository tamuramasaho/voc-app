version: 2

references:
  default_docker_ruby_executor: &default_docker_ruby_executor
    image: circleci/ruby:2.6.3-stretch-node
    environment:
      BUNDLE_JOBS: 3
      BUNDLE_RETRY: 3
      BUNDLE_PATH: vendor/bundle
      PGHOST: 127.0.0.1
      PGUSER: circleci-demo-ruby
      PGPASSWORD: ""
      RAILS_ENV: test
  mysql: &mysql
    image: circleci/mysql5.7
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: voc-app_test
      MYSQL_USER: root
      MYSQL_PASSWORD: 

jobs:
  build:
    docker:
      - *default_docker_ruby_executor
    steps:
      - checkout
      # Which version of bundler?
      - run:
          name: Install bundler
          command: gem install bundler -v 2.1.4
      - run:
          name: Which bundler?
          command: bundle -v
      # bundle cache
      - restore_cache:
          keys:
            - voc-app-{{ checksum "Gemfile.lock" }}
      - run:
          name: Bundle Install
          command: bundle check || bundle install
      # Store bundle cache
      - save_cache:
          key: voc-app-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle      
  test:
    parallelism: 3
    docker:
      - *default_docker_ruby_executor
      - *mysql
    steps:
      - checkout
      - restore_cache:
          keys:
            - voc-app-{{ checksum "Gemfile.lock" }}
      - run:
          name: Bundle Install
          command: bundle check || bundle install
      - run:
          name: Wait for DB
          command: |
            for i in `seq 1 10`;
            do
              nc -z 127.0.0.1 3306 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for MySQL && exit 1
      - run:
          name: Database setup
          command: bundle exec rails db:schema:load --trace
      # Run rspec in parallel
      - run:
          command: |
            mkdir /tmp/test-results
            TESTFILES=$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
            bundle exec rspec $TESTFILES --profile 10 --format RspecJunitFormatter --out /tmp/test-results/rspec.xml --format progress
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build